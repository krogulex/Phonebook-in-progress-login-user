{"version":3,"file":"static/js/500.cd6831dd.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsAdding = state => state.contacts.isAdding;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const allContacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  const filteredContacts = allContacts.filter(f =>\n    f.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return filteredContacts;\n};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { Button, Input} from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const oldContacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const contact = {\n      name: form.elements[0].value,\n      number: form.elements[1].value,\n    };\n\n    if (\n      oldContacts.find(\n        oldContact =>\n          oldContact.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <div>\n      <h2>Add new contact</h2>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          focusBorderColor=\"teal\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <div>\n          <Input\n            id=\"number\"\n            type=\"tel\"\n            placeholder=\"Enter phone number\"\n            focusBorderColor=\"teal\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n        <Button colorScheme='teal' className=\"add-button\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\n\nimport { Button } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      {contacts.length === 0 ? (\n        <p>No contacts yet</p>\n      ) : filteredContacts.length === 0 ? (\n        <p>No contacts found</p>\n      ) : (\n        filteredContacts.map(element => {\n          return (\n            <div key={element.id} id={element.id} className=\"contact-item\">\n              <span>&#9990;</span>\n              <p>\n                <span>{element.name}: </span>\n                {element.phone}\n              </p>\n              <Button\n                colorScheme=\"teal\"\n                className=\"contact-delete\"\n                onClick={() => handleDelete(element.id)}\n              >\n                Delete\n              </Button>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nimport { Input} from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const filterInput = event.target.value;\n\n    dispatch(filterContacts(filterInput));\n  };\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n      <form>\n      <Input\n        maxWidth=\"47%\"\n        focusBorderColor=\"teal\"\n        onChange={handleFilterChange}\n        type=\"text\"\n        placeholder=\"Enter name\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      </form>\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError, selectIsAdding } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const isAdding = useSelector(selectIsAdding);\n    const error = useSelector(selectError);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n    \n    return (\n      <div className='page-contacts'>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && (\n          <div className='loader'>\n            <ThreeDots\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"#319795\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n              ma\n            />\n          </div>\n        )}\n        {error && (\n          <p>Service communication error</p>\n        )\n        }\n        <ContactList />\n        {isAdding && !error && (\n          <div className='loader'>\n            <ThreeDots\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"#319795\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n              ma\n            />\n          </div>\n        )}\n      </div>\n    );\n  };\n  ","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsAdding","isAdding","selectError","error","selectFilteredContacts","allContacts","filter","selectFilter","f","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","oldContacts","useSelector","className","onSubmit","event","preventDefault","form","target","contact","elements","value","number","find","oldContact","alert","addContact","reset","I","id","type","placeholder","focusBorderColor","pattern","title","required","colorScheme","ContactList","filteredContacts","length","map","element","phone","onClick","deleteContact","Filter","maxWidth","onChange","filterInput","filterContacts","Contacts","useEffect","fetchContacts","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ma","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_a","_b","_c","disabled","readOnly","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size"],"sourceRoot":""}