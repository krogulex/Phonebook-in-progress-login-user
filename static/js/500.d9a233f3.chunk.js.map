{"version":3,"file":"static/js/500.d9a233f3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsAdding = state => state.contacts.isAdding;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const allContacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  const filteredContacts = allContacts.filter(f =>\n    f.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return filteredContacts;\n};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { Button, Input} from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const oldContacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const contact = {\n      name: form.elements[0].value,\n      number: form.elements[1].value,\n    };\n\n    if (\n      oldContacts.find(\n        oldContact =>\n          oldContact.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <h2>Add new contact</h2>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          focusBorderColor=\"teal\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <div>\n          <Input\n            id=\"number\"\n            type=\"tel\"\n            placeholder=\"Enter phone number\"\n            focusBorderColor=\"teal\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n        <Button colorScheme='teal' className=\"add-button\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\n\nimport { Button } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      {contacts.length === 0 ? (\n        <p>No contacts yet</p>\n      ) : filteredContacts.length === 0 ? (\n        <p>No contacts found</p>\n      ) : (\n        filteredContacts.map(element => {\n          return (\n            <div key={element.id} id={element.id} className=\"contact-item\">\n              <span>&#9990;</span>\n              <p>\n                <span>{element.name}: </span>\n                {element.phone}\n              </p>\n              <Button\n                colorScheme=\"teal\"\n                className=\"contact-delete\"\n                onClick={() => handleDelete(element.id)}\n              >\n                Delete\n              </Button>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nimport { Input} from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const filterInput = event.target.value;\n\n    dispatch(filterContacts(filterInput));\n  };\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n      <form>\n      <Input\n        maxWidth=\"47%\"\n        focusBorderColor=\"teal\"\n        onChange={handleFilterChange}\n        type=\"text\"\n        placeholder=\"Enter name\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      </form>\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError, selectIsAdding } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const isAdding = useSelector(selectIsAdding);\n    const error = useSelector(selectError);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n    \n    return (\n      <div className='page-contacts'>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && (\n          <div className='loader'>\n            <ThreeDots\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"#319795\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n              ma\n            />\n          </div>\n        )}\n        {error && (\n          <p>Service communication error</p>\n        )\n        }\n        <ContactList />\n        {isAdding && !error && (\n          <div className='loader'>\n            <ThreeDots\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"#319795\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n              ma\n            />\n          </div>\n        )}\n      </div>\n    );\n  };\n  "],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsAdding","isAdding","selectError","error","selectFilteredContacts","allContacts","filter","selectFilter","f","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","oldContacts","useSelector","className","onSubmit","event","preventDefault","form","target","contact","elements","value","number","find","oldContact","alert","addContact","reset","I","id","type","placeholder","focusBorderColor","pattern","title","required","colorScheme","ContactList","filteredContacts","length","map","element","phone","onClick","deleteContact","Filter","maxWidth","onChange","filterInput","filterContacts","Contacts","useEffect","fetchContacts","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ma"],"sourceRoot":""}